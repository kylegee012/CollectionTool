/**
 * This class is generated by jOOQ
 */
package jooq.tables.records;


import javax.annotation.Generated;

import jooq.tables.Gadget;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GadgetRecord extends UpdatableRecordImpl<GadgetRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = -399709225;

    /**
     * Setter for <code>PUBLIC.GADGET.GADGETID</code>.
     */
    public void setGadgetid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.GADGET.GADGETID</code>.
     */
    public Long getGadgetid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.GADGET.GADGETNAME</code>.
     */
    public void setGadgetname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.GADGET.GADGETNAME</code>.
     */
    public String getGadgetname() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Gadget.GADGET.GADGETID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Gadget.GADGET.GADGETNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getGadgetid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getGadgetname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GadgetRecord value1(Long value) {
        setGadgetid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GadgetRecord value2(String value) {
        setGadgetname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GadgetRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GadgetRecord
     */
    public GadgetRecord() {
        super(Gadget.GADGET);
    }

    /**
     * Create a detached, initialised GadgetRecord
     */
    public GadgetRecord(Long gadgetid, String gadgetname) {
        super(Gadget.GADGET);

        set(0, gadgetid);
        set(1, gadgetname);
    }
}
